{
  "name": "artist",
  "version": "0.1.5",
  "description": "Template engine for node.js built on fest",
  "main": "index.js",
  "repository": {
    "type": "git",
    "url": "http://github.com/eprev/artist.git"
  },
  "keywords": [
    "template",
    "templating",
    "html",
    "xml"
  ],
  "author": {
    "name": "Anton Eprev",
    "email": "a.eprev@gmail.com"
  },
  "dependencies": {
    "fest": "*"
  },
  "devDependencies": {
    "mocha": "*"
  },
  "scripts": {
    "test": "mocha --ignore-leaks --reporter dot"
  },
  "readme": "# Artist\n\n[![Build Status](https://secure.travis-ci.org/eprev/artist.png?branch=master)](http://travis-ci.org/eprev/artist)\n\nArtist is a template engine for node.js built on [fest](http://github.com/mailru/fest).\n\nFeatures:\n\n* Caches compiled templates\n* Synchronous and asynchronous API\n* Express-compatible\n* Handles fest's runtime errors\n* Connect's middleware proxy\n\n## Installation\n\n```\nnpm install artist\n```\n\n## API\n\nView source for documentation.\n\n## Usage\n\n\nWith express:\n```javascript\napp.engine('xml', require('artist').render());\n```\n\nWith express (production environment):\n```javascript\napp.engine('xml', require('artist').render({\n    cache: true,\n    debug: false\n}));\n```\n\nSynchronous version:\n```javascript\nvar render = require('artist').renderSync();\n// ...\nvar html = render('index.xml', {foo: 'bar'});\n```\n\nindex.xml\n```xml\n<?xml version=\"1.0\"?>\n<fest:template xmlns:fest=\"http://fest.mail.ru\" context_name=\"json\">\n    <fest:value>json.foo</fest:value>\n</fest:template>\n```\n\n## Proxy\n\nProxy is a connect middleware. It handles requests to the templates, compiles them and wraps results\ninto AMD module, JSONP or any other format.\n\nAMD:\n```javascript\napp.use(require('artist').proxy({\n    format: 'amd', // 'amd', 'jsonp' or any string with #ID# and #FN# placeholders\n    route: '/scripts/templates', // middleware mounting point\n    templates: app.get('views') // path to the view directory\n}));\n```\n\nGET /scripts/templates/layout.js\n```javascript\ndefine(function(){return function(__fest_context){\n    ...\n}});\n```\n\n\nJSONP:\n```javascript\napp.use(require('artist').proxy({\n    format: 'jsonp',\n    route: '/scripts/templates',\n    templates: app.get('views')\n}));\n```\n\nGET /scripts/templates/layout.js?jsonp=handleTemplate\n```javascript\nhandleTemplate(function(__fest_context){\n    ...\n});\n```\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/eprev/artist/issues"
  },
  "homepage": "https://github.com/eprev/artist",
  "_id": "artist@0.1.5",
  "_from": "artist@"
}
